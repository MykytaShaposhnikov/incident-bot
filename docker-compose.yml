version: '3.9'
services:
  bot:
    build:
      context: .
      dockerfile: build/Dockerfile
    command: ['./wait-for-it.sh', 'db:5432', '--', 'python3', 'main.py']
    depends_on:
      - db
    environment:
#      SLACK_APP_TOKEN: 'xapp-1-A06ULSKAN2G-6955893753943-ab06fc0cda19c8ce8a0631fb486cdaacf9dc270179737e4b4b6eaf6490c5af0c'
#      SLACK_BOT_TOKEN: 'xoxb-6941968768754-6993228799712-sPFHQaRF8361P6114O3Sx2Ee'
#      SLACK_USER_TOKEN: 'xoxp-6941968768754-6964757228752-6967523048101-675de7ddd989cf73139e06ac17a7017f'
      POSTGRES_HOST: db
      POSTGRES_DB: incident_bot
      POSTGRES_USER: incident_bot
      POSTGRES_PASSWORD: somepassword
      POSTGRES_PORT: 5432
      PAGERDUTY_API_TOKEN: ''
      PAGERDUTY_API_USERNAME: ''
      STATUSPAGE_API_KEY: ''
      STATUSPAGE_PAGE_ID: ''
      STATUSPAGE_URL: ''
      ATLASSIAN_API_URL: ''
      ATLASSIAN_API_USERNAME: ''
      ATLASSIAN_API_TOKEN: ''
      ATLASSIAN_OPSGENIE_API_KEY: ''
      ATLASSIAN_OPSGENIE_API_TEAM_INTEGRATION_KEY: ''
      DEFAULT_WEB_ADMIN_PASSWORD: 'foobar1234'
      FLASK_APP_SECRET_KEY: 'supersecret'
      JWT_SECRET_KEY: 'supersecret'
      ZOOM_ACCOUNT_ID: ''
      ZOOM_CLIENT_ID: ''
      ZOOM_CLIENT_SECRET: ''
      CONFIG_FILE_PATH: '/config/incident-bot/config.yaml'
      LOGLEVEL: 'debug'
    ports:
      - target: 3000
        published: 3000
        protocol: tcp
        mode: host
    links:
      - db
    volumes:
      # Wherever the config file lives, root by default
      - ./backend/config.yaml:/config/incident-bot/config.yaml
  db:
    image: postgres:13
    command:
      ['postgres', '-c', 'log_statement=all', '-c', 'log_destination=stderr']
    hostname: db
    environment:
      POSTGRES_PASSWORD: 'somepassword'
      POSTGRES_USER: 'incident_bot'
    ports:
      - 5432:5432
